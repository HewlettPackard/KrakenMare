--- SINGLE MACHINE setup... ( MIN RAM=16, MIN cores=4, recommended = 32GB, 8 cores) ---

1 - install docker (check it works with "docker run hello-world")

###########################################
# ONLY for proxy-challenged IT departments#
###########################################

you may need to:

1.1) mkdir -p /etc/systemd/system/docker.service.d/
1.2) add this file :  /etc/systemd/system/docker.service.d/http-proxy.conf

where the content is:

#cat /etc/systemd/system/docker.service.d/http-proxy.conf

[Service]
Environment="HTTP_PROXY=http://web-proxy.bbn.hpecorp.net:8080" "HTTPS_PROXY=http://web-proxy.bbn.hpecorp.net:8080" "NO_PROXY=<insert-your-hostname-here>"

1.3) mkdir /etc/docker
1.4) create /etc/docker/daemon.json and adjust the 8.8.8.8 and 4.4.4.4 IP addresses to match your DNS IP addresses

{"registry-mirrors": ["http://fsi-o184i059:5000"], "insecure-registries": ["http://fsi-o184i059:5000", "http://fsi-o184i059:5001"], "dns": ["8.8.8.8", "4.4.4.4"]}


1.5) systemctl daemon-reload
1.6) systemctl restart docker

###############################################
# end ONLY for proxy-challenged IT departments#
###############################################

2 - install docker-compose 1.25.5

sudo curl -L https://github.com/docker/compose/releases/download/1.25.5/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose

3 - make it executable

chmod +x /usr/local/bin/docker-compose

4 - create a km.conf file

- cp playbooks/km.conf ~/km.conf, then edit it to match your setup

5 - create a swarm cluster

docker swarm init --advertise-addr x.y.z.t (where x.y.z.t is a local IP address to attach to)

6 - label your local machine with all KM labels

bash syntax

#for label in broker-1 broker-2 broker-3 fanin registry framework injectors test-tools supervisory_cloud; do docker node update --label-add $label=true `hostname`; done

7 - run setup.sh -r: this will start two registry, a mirror registry and a proxy registry

8 - check that docker ps shows two registries

xyz@xyz:~/wp1.3/playbooks$ docker ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
df2b2c0bd90f        registry            "/entrypoint.sh /etc..."   5 seconds ago       Up 5 seconds        0.0.0.0:5000->5000/tcp   docker-registry_registry-mirror_1
75a0537d3758        registry            "/entrypoint.sh /etc..."   57 minutes ago      Up 5 seconds        0.0.0.0:5001->5000/tcp   docker-registry_registry-private_1

9 - run setup.sh -b: this will build the stack from the internet, can be very long depending on internet connection

10 - run setup.sh -d: this will deploy all containers and start the stack

11 - run a sanity check... after a while (stack may take up to 5 minutes to start)

run setup.sh -s: 

running:timeout 10 mosquitto_sub -h mosquitto -p ok ... see logs </tmp/mosquitto>
running:kafkacat -b broker-1 -L                  ok ... see logs </tmp/broker-1>
running:kafkacat -b broker-2:9093 -L             ok ... see logs </tmp/broker-2>
running:kafkacat -b broker-3:9094 -L             ok ... see logs </tmp/broker-3>
running:redis-cli -h redis ping                  ok ... see logs </tmp/redis>
running:curl -s framework:8080/agents            ok ... see logs </tmp/framework>
running:curl -s http://druid:8081/status/health  ok ... see logs </tmp/druid_coord>
running:curl -s http://druid:8082/status/health  ok ... see logs </tmp/druid_broker>
running:curl -s http://druid:8083/status/health  ok ... see logs </tmp/druid_histo>
running:curl -s http://druid:8090/status/health  ok ... see logs </tmp/druid_overlord>
running:curl -s http://druid:8091/status/health  ok ... see logs </tmp/druid_middle>
running:kafkacat -L -X ssl.ca.location=/run/secr ok ... see logs </tmp/ssl-broker-1>
running:kafkacat -L -X ssl.ca.location=/run/secr ok ... see logs </tmp/ssl-broker-2>
running:kafkacat -L -X ssl.ca.location=/run/secr ok ... see logs </tmp/ssl-broker-3>
running:curl -s http://prometheus:9090/api/v1/ta ok ... see logs </tmp/prometheus>
running:curl -s --cacert /run/secrets/km-ca-1.cr ok ... see logs </tmp/schemaregistry>
running:kafkacat -b broker-1:29092 -L -X securit ok ... see logs </tmp/sasl-broker-1>
running:kafkacat -b broker-2:29093 -L -X securit ok ... see logs </tmp/sasl-broker-2>
running:kafkacat -b broker-3:29094 -L -X securit ok ... see logs </tmp/sasl-broker-3>
running:curl -s --cacert /run/secrets/km-ca-1.cr ok ... see logs </tmp/schemaregistry>
number of messages in KAFKA on the fabric topic... @time = 1587455812 : 320242

all tests succeeded...


