---
- name: Preparation phase
  hosts: localhost

# Edit variables.
  vars_files:
    - vars.yml

  environment:
    http_proxy: "{{ proxy }}"
    https_proxy: "{{ proxy }}"


# End of variables

  tasks:
  - name: Download docker-ce repository to yum
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /tmp/docker.repo

    
  - name: Download the containerd.io-1.2.5-3.1.el7.{{ ansible_architecture }} rpm from a remote repo
    get_url:
      url:  https://download.docker.com/linux/centos/7/{{ ansible_architecture }}/stable/Packages/containerd.io-1.2.5-3.1.el7.{{ ansible_architecture }}.rpm
      dest: /tmp/containerd.rpm

  - name: Download docker-compose
    get_url:
    #Example: https://github.com/docker/compose/releases/download/1.24.0/docker-compose-Linux-x86_64

      url: "https://github.com/docker/compose/releases/download/{{ docker_compose_Version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
      dest: /tmp/docker-compose


- name: Ansible setup for the scalability analysis
  hosts: all
  gather_facts: no

# Edit variables.
  vars_files:
    - vars.yml

  environment:
    http_proxy: "{{ proxy }}"
    https_proxy: "{{ proxy }}"


# End of variables

  tasks:
  - name: Mount repo from {{iso_server}}:{{ iso_source_path }} to {{iso_mount_point}}
    mount:
      path: "{{ iso_mount_point }}"
      src: "{{iso_server}}:{{ iso_source_path }}"
      state: mounted
      fstype: nfs

  - name: Create /etc/yum.repos.d/ if it doesn't exist
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0775
    with_items:
      - /etc/yum.repos.d/

  - name: Add repository to yum (1/2)
    yum_repository:
      name: AppStream
      description: Repo AppStream from {{RHEL_Version}}
      baseurl: file://{{ iso_mount_point }}/{{RHEL_Version}}/AppStream
      file: dvd
      enabled: yes
      gpgcheck: no

  - name: Add repository to yum (2/2)
    yum_repository:
      name: BaseOS
      description: Repo BaseOS from {{RHEL_Version}}
      baseurl: file://{{ iso_mount_point }}/{{RHEL_Version}}/BaseOS
      file: dvd
      enabled: yes
      gpgcheck: no


  - name: Install yum-utils,wget,git and tmux
    yum:
      name:
        - yum-utils
        - wget
        - git
        - tmux
        - python3-pip
        
      state: latest
  
  - name: Add pip to use swarm_init from Ansible
    pip:
      name: 
        - docker
      executable: pip-3


  - name: Add docker-ce repository to yum
    copy:
      dest: /etc/yum.repos.d/docker-ce.repo
      src: /tmp/docker.repo

  - name: Copy containerd.rpm from Ansible Control Node
    copy:
      dest: /tmp/containerd.rpm
      src: /tmp/containerd.rpm


  - name: Install the containerd rpm 
    yum:
      name: /tmp/containerd.rpm
      state: present

  - name: Install docker-ce
    yum:
      name: docker-ce
      state: latest
      disable_gpg_check: yes

  - name : Setup HPE proxy for Docker Registry  in  /etc/systemd/system/docker.service.d/http-proxy.conf
    blockinfile:
      path: /etc/systemd/system/docker.service.d/http-proxy.conf
      create: yes
      block: |
        [Service]
        Environment="HTTP_PROXY={{ proxy }}" "HTTPS_PROXY={{ proxy }}" "NO_PROXY={{ docker_mirror_registry_address }}"

  - name: Create /etc/docker/ if it doesn't exist
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0775
    with_items:
      - /etc/docker

  - name : Setup docker and use a local mirror registry and classic docker registry
    copy:
      dest: /etc/docker/daemon.json
      backup: yes
      content: |
        {
          "insecure-registries" : ["o184i024.gre.smktg.hpecorp.net:4567","http://{{ docker_mirror_registry_address }}:{{ docker_mirror_registry_port }}","http://{{ docker_mirror_registry_address }}:{{ docker_registry_port }}"],
          "registry-mirrors": ["http://{{ docker_mirror_registry_address }}:{{ docker_mirror_registry_port }}"],
          "dns" : ["16.110.135.51", "16.110.135.52"],
          "dns-search" : ["emea.hpqcorp.net"]
        }
##BDU user
  - name: Add the user 'bdu'
    user:
      name: bdu
      password: "{{password}}"
      groups: docker,wheel
      append: yes

## Docker-compose
  - name: Copy docker-compose from Ansible Control Node
    copy:
      src: /tmp/docker-compose
      dest: /usr/local/bin/docker-compose

  - name: Allow execution of /usr/local/bin/docker-compose
    file:
      path: /usr/local/bin/docker-compose
      mode : "u+x,o+x"



# Send instructions on nodes before killing docker services on host machine
- name: Restart docker on swarm_nodes
  hosts: swarm_nodes
  gather_facts: no  


# Edit variables.
  vars_files:
    - vars.yml

  environment:
    http_proxy: "{{ proxy }}"
    https_proxy: "{{ proxy }}"


# End of variables

  tasks:
  - name: Run deamon-reload then restart Docker service
    systemd:
      state: restarted
      daemon_reload: yes
      enabled : yes
      name: docker



- name: Restart docker on swarm_manager
  hosts: swarm_manager
  gather_facts: no

# Edit variables.
  vars_files:
    - vars.yml

  environment:
    http_proxy: "{{ proxy }}"
    https_proxy: "{{ proxy }}"


# End of variables

  tasks:
  - name: Run deamon-reload then restart Docker service
    systemd:
      state: restarted
      daemon_reload: yes
      enabled : yes
      name: docker

