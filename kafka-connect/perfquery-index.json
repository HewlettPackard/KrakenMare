{
  "type": "kafka",
  "dataSchema": {
    "dataSource": "perfquery",
    "parser": {
      "type": "avro_stream",
      "avroBytesDecoder": {
        "type": "schema_registry",
        "url": "http://srd:8085"
      },
      "parseSpec": {
        "format": "avro",
        "timestampSpec": {
          "column": "timestamp",
          "format": "millis"
        },
        "dimensionsSpec": {
          "dimensions": [
            { "name": "uuid", "type": "string" },
            { "name": "timestamp", "type": "long" },
	    "PortSelect",
	    "SymbolErrorCounters",
            "LinkErrorRecoveryCounter",
            "LinkDownedCounter",
            "PortRcvErrors",
	    "PortRcvRemotePhysicalErrors",
            "PortRcvSwitchRelayErrors",
            "PortXmitDiscards",
            "PortXmitConstraintErrors",
            "PortRcvConstraintErrors",
            "LocalLinkIntegrityErrors",
            "ExcessiveBufferOverrunErrors",
            "VL15Dropped",
            "PortXmitData",
            "PortRcvData",
            "PortXmitPkts",
            "PortRcvPkts",
            "PortXmitWait"
          ]
        },
        "flattenSpec": {
          "useFieldDiscovery": true,
          "fields": [
            { "type": "path", "name": "PortSelect", "expr": "$.measurementList[0]sensorValue"},
            { "type": "path", "name": "SymbolErrorCounters", "expr": "$.measurementList[1]sensorValue"},
            { "type": "path", "name": "LinkErrorRecoveryCounter", "expr": "$.measurementList[2]sensorValue"},
            { "type": "path", "name": "LinkDownedCounter", "expr": "$.measurementList[3]sensorValue"},
            { "type": "path", "name": "PortRcvErrors", "expr": "$.measurementList[4]sensorValue"},
            { "type": "path", "name": "PortRcvRemotePhysicalErrors", "expr": "$.measurementList[5]sensorValue"},
            { "type": "path", "name": "PortRcvSwitchRelayErrors", "expr": "$.measurementList[6]sensorValue"},
            { "type": "path", "name": "PortXmitDiscards", "expr": "$.measurementList[7]sensorValue"},
            { "type": "path", "name": "PortXmitConstraintErrors", "expr": "$.measurementList[8]sensorValue"},
            { "type": "path", "name": "PortRcvConstraintErrors", "expr": "$.measurementList[9]sensorValue"},
            { "type": "path", "name": "LocalLinkIntegrityErrors", "expr": "$.measurementList[10]sensorValue"},
            { "type": "path", "name": "ExcessiveBufferOverrunErrors", "expr": "$.measurementList[11]sensorValue"},
            { "type": "path", "name": "VL15Dropped", "expr": "$.measurementList[12]sensorValue"},
            { "type": "path", "name": "PortXmitData", "expr": "$.measurementList[13]sensorValue"},
            { "type": "path", "name": "PortRcvData", "expr": "$.measurementList[14]sensorValue"},
            { "type": "path", "name": "PortXmitPkts", "expr": "$.measurementList[15]sensorValue"},
            { "type": "path", "name": "PortRcvPkts", "expr": "$.measurementList[16]sensorValue"},
            { "type": "path", "name": "PortXmitWait", "expr": "$.measurementList[17]sensorValue"}
          ]
        }
      }
    },
    "granularitySpec": {
      "type": "uniform",
      "segmentGranularity": "HOUR",
      "rollup": false,
      "queryGranularity": "none"
    },
    "metricsSpec": []
  },
  "ioConfig": {
    "type": "kafka",
    "topic": "fabric",
    "consumerProperties": {
      "bootstrap.servers": "broker-1:9092,broker-2:9093,broker-3:9094"
    }
  },
  "tuningConfig": {
    "type": "kafka",
    "forceExtendableShardSpecs": true,
    "maxParseExceptions": 100,
    "maxSavedParseExceptions": 10
  }
}
